{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "LODS - Use CloudFormation and Infrastructure as Code to Deploy AWS Resources.  Change set adding EC2 and S3 to existing VPC.",
    "Parameters": {
        "ChallengeVPCCIDR": {
            "Description": "The CIDR value for the new VPC to be created",
            "Type": "String",
            "Default": "10.10.0.0/16",
            "AllowedValues": [
                "10.10.0.0/16"
            ]
        },
        "PublicSubnet1Parameter": {
            "Description": "The Public Subnet 1 CIDR",
            "Type": "String",
            "Default": "10.10.0.0/24",
            "AllowedValues": [
                "10.10.0.0/24"
            ]
        },
        "PublicSubnet2Parameter": {
            "Description": "The Public Subnet 2 CIDR",
            "Type": "String",
            "Default": "10.10.1.0/24",
            "AllowedValues": [
                "10.10.1.0/24"
            ]
        },
        "S3BucketParameter": {
            "Description": "The name of the new Amazon S3 bucket to be created.  This must be globally unique across AWS (3-63 lowercase characters and numbers.)",
            "Type": "String",
            "MinLength": 3,
            "MaxLength": 63,
            "AllowedPattern": "^[a-z0-9]{5,40}$",
            "Default": "replacethisvalue",
            "ConstraintDescription": "Use the provided name from the challenge instructions"
        },
        "EC2InstanceParameter": {
            "Description": "The name of the new EC2 instance to be created.",
            "Type": "String",
            "Default": "replacethisvalue",
            "ConstraintDescription": "Use the provided name from the challenge instructions"
        },
        "LatestLinuxAmiId": {
            "Description": "Fetches the latest Amazon Linux AMI ID from the Systems Manager Parameter store when creating the EC2 instance",
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        }
    },
    "Resources": {
        "ChallengeVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "ChallengeVPCCIDR"
                },
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "LODS-Challenge-VPC"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "InternetGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ChallengeVPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ChallengeVPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnet1Parameter"
                },
                "MapPublicIpOnLaunch": true,
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public Subnet 1"
                    }
                ]
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ChallengeVPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnet2Parameter"
                },
                "MapPublicIpOnLaunch": true,
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public Subnet 2"
                    }
                ]
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ChallengeVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PublicRouteTable"
                    }
                ]
            }
        },
        "DefaultPublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            }
        },
        "PublicSubnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            }
        },
        "NoIngressSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupName": "no-ingress-sg",
                "GroupDescription": "Security group with no ingress rule",
                "VpcId": {
                    "Ref": "ChallengeVPC"
                }
            }
        },
        "ChallengeEC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "LatestLinuxAmiId"
                },
                "InstanceType": "t2.micro",
                "SecurityGroupIds": [
                    {
                        "Ref": "NoIngressSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "EC2InstanceParameter"
                        }
                    }
                ]
            }
        },
        "ChallengeS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Ref": "S3BucketParameter"
                }
            }
        }
    },
    "Outputs": {
        "ChallengeVPC": {
            "Description": "A reference to the new VPC",
            "Value": {
                "Ref": "ChallengeVPC"
            }
        },
        "PublicSubnets": {
            "Description": "A list of the public subnets",
            "Value": {
                "Fn::Join": [
                    ",",
                    [
                        {
                            "Ref": "PublicSubnet1"
                        },
                        {
                            "Ref": "PublicSubnet2"
                        }
                    ]
                ]
            }
        },
        "PublicSubnet1": {
            "Description": "A reference to the public subnet in the 1st Availability Zone",
            "Value": {
                "Ref": "PublicSubnet1"
            }
        },
        "PublicSubnet2": {
            "Description": "A reference to the public subnet in the 2nd Availability Zone",
            "Value": {
                "Ref": "PublicSubnet2"
            }
        },
        "NoIngressSecurityGroup": {
            "Description": "Security group with no ingress rule",
            "Value": {
                "Ref": "NoIngressSecurityGroup"
            }
        },
        "ChallengeEC2Instance": {
            "Description": "A reference to the new Challenge EC2 instance",
            "Value": {
                "Ref": "ChallengeEC2Instance"
            }
        },
        "ChallengeS3Bucket": {
            "Description": "A reference to the new Challenge S3 bucket",
            "Value": {
                "Ref": "ChallengeS3Bucket"
            }
        }
    }
}